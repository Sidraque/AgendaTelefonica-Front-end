{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./contato-form.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./contato-form.component.scss?ngResource\";\nimport { Location } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ContatoService } from '../../services/contato.service';\nlet ContatoFormComponent = class ContatoFormComponent {\n  constructor(fb, contatoService, router, route, location) {\n    this.fb = fb;\n    this.contatoService = contatoService;\n    this.router = router;\n    this.route = route;\n    this.location = location;\n    this.isEditing = false;\n    this.contatoId = null;\n    this.contatoForm = this.fb.group({\n      contatoNome: ['', [Validators.required]],\n      contatoEmail: [''],\n      contatoCelular: ['', [Validators.required, Validators.pattern('^[0-9]*$'), Validators.maxLength(11)]],\n      contatoTelefone: ['', [Validators.pattern('^[0-9]*$'), Validators.maxLength(10)]],\n      contatoSnFavorito: ['N'],\n      contatoSnAtivo: ['S']\n    });\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.isEditing = true;\n        this.contatoId = +id;\n        this.loadContato(+id);\n      }\n    });\n  }\n  goBack() {\n    this.location.back();\n  }\n  loadContato(id) {\n    this.contatoService.getContatoById(id).subscribe(contato => {\n      this.contatoForm.patchValue(contato);\n    });\n  }\n  onSubmit() {\n    if (this.contatoForm.valid) {\n      const celular = this.contatoForm.value.contatoCelular;\n      this.contatoService.checkContactExists(celular).subscribe({\n        next: existingContact => {\n          if (existingContact) {\n            alert('Já existe um contato com este número de celular.');\n          } else {\n            this.saveContact();\n          }\n        },\n        error: error => {\n          console.error('Ocorreu um problema ao verificar se o contato existe.', error);\n        }\n      });\n    }\n  }\n  saveContact() {\n    const operation = this.isEditing ? this.contatoService.updateContato(this.contatoId, this.contatoForm.value) : this.contatoService.createContato(this.contatoForm.value);\n    operation.subscribe({\n      next: () => this.router.navigate(['/contatos']),\n      error: error => console.error('Houve um problema.', error)\n    });\n  }\n  inactivateContato() {\n    if (this.contatoId) {\n      this.contatoService.inactivateContato(this.contatoId).subscribe({\n        next: () => this.router.navigate(['/contatos']),\n        error: error => console.error('Houve um problema.', error)\n      });\n    }\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: FormBuilder\n  }, {\n    type: ContatoService\n  }, {\n    type: Router\n  }, {\n    type: ActivatedRoute\n  }, {\n    type: Location\n  }];\n};\nContatoFormComponent = __decorate([Component({\n  selector: 'app-contato-form',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ContatoFormComponent);\nexport { ContatoFormComponent };","map":{"version":3,"names":["Location","Component","FormBuilder","ReactiveFormsModule","Validators","ActivatedRoute","Router","ContatoService","ContatoFormComponent","constructor","fb","contatoService","router","route","location","isEditing","contatoId","contatoForm","group","contatoNome","required","contatoEmail","contatoCelular","pattern","maxLength","contatoTelefone","contatoSnFavorito","contatoSnAtivo","ngOnInit","paramMap","subscribe","params","id","get","loadContato","goBack","back","getContatoById","contato","patchValue","onSubmit","valid","celular","value","checkContactExists","next","existingContact","alert","saveContact","error","console","operation","updateContato","createContato","navigate","inactivateContato","_","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["/Users/imsidraque/Documents/Projects/Teste Entrevista K2/front-end/agenda-telefonica/src/app/pages/contato-form/contato-form.component.ts"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ContatoService } from '../../services/contato.service';\n\n@Component({\n  selector: 'app-contato-form',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  templateUrl: './contato-form.component.html',\n  styleUrls: ['./contato-form.component.scss']\n})\n\nexport class ContatoFormComponent implements OnInit {\n  contatoForm: FormGroup;\n  isEditing = false;\n  contatoId: number | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private contatoService: ContatoService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location\n  ){\n    this.contatoForm = this.fb.group({\n      contatoNome: ['', [Validators.required]],\n      contatoEmail: [''],\n      contatoCelular: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern('^[0-9]*$'),\n          Validators.maxLength(11)\n        ]\n      ],\n      contatoTelefone: [\n        '',\n        [\n          Validators.pattern('^[0-9]*$'),\n          Validators.maxLength(10)\n        ]\n      ],\n      contatoSnFavorito: ['N'],\n      contatoSnAtivo: ['S']\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id) {\n        this.isEditing = true;\n        this.contatoId = +id;\n        this.loadContato(+id);\n      }\n    });\n  }\n\n  goBack(): void {\n    this.location.back(); \n  }\n\n  loadContato(id: number): void {\n    this.contatoService.getContatoById(id).subscribe(contato => {\n      this.contatoForm.patchValue(contato);\n    });\n  }\n\n  onSubmit(): void {\n    if (this.contatoForm.valid) {\n      const celular = this.contatoForm.value.contatoCelular;\n  \n      this.contatoService.checkContactExists(celular).subscribe({\n        next: (existingContact) => {\n          if (existingContact) {\n            alert('Já existe um contato com este número de celular.');\n          } else {\n            this.saveContact();\n          }\n        },\n        error: (error) => {\n          console.error('Ocorreu um problema ao verificar se o contato existe.', error);\n        }\n      });\n    }\n  }\n  \n  saveContact(): void {\n    const operation = this.isEditing\n      ? this.contatoService.updateContato(this.contatoId!, this.contatoForm.value)\n      : this.contatoService.createContato(this.contatoForm.value);\n  \n    operation.subscribe({\n      next: () => this.router.navigate(['/contatos']),\n      error: error => console.error('Houve um problema.', error)\n    });\n  }\n\n  inactivateContato(): void {\n    if (this.contatoId) {\n      this.contatoService.inactivateContato(this.contatoId).subscribe({\n        next: () => this.router.navigate(['/contatos']),\n        error: error => console.error('Houve um problema.', error)\n      });\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}