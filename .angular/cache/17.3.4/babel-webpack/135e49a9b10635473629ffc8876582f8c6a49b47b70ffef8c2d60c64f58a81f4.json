{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./contato-list.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./contato-list.component.scss?ngResource\";\n// contato-list.component.ts\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ContatoService } from '../../services/contato.service';\nlet ContatoListComponent = class ContatoListComponent {\n  constructor(contatoService, router) {\n    this.contatoService = contatoService;\n    this.router = router;\n    this.contatos = [];\n    this.originalContatos = [];\n  }\n  ngOnInit() {\n    this.loadContatos();\n  }\n  loadContatos() {\n    this.contatoService.getContatos().subscribe(data => {\n      this.contatos = data;\n      this.originalContatos = [...this.contatos];\n    }, error => {\n      console.error('Erro ao buscar contatos!', error);\n    });\n  }\n  deleteContato(contatoId) {\n    if (confirm('Tem certeza de que deseja excluir este contato?')) {\n      this.contatoService.deleteContato(contatoId).subscribe(() => {\n        this.contatos = this.contatos.filter(contato => contato.contatoId !== contatoId);\n      }, error => {\n        console.error('Erro ao excluir contato!', error);\n      });\n    }\n  }\n  editContato(contato) {\n    this.router.navigate(['/contato/editar', contato.contatoId]);\n  }\n  inactivateContato(contato) {\n    if (confirm('Tem certeza de que deseja desativar este contato?')) {\n      this.contatoService.inactivateContato(contato.contatoId).subscribe({\n        next: () => {\n          contato.contatoSnAtivo = 'N';\n        },\n        error: error => console.error('Houve um problema.', error)\n      });\n    }\n  }\n  addContato() {\n    this.router.navigate(['/contato/novo']);\n  }\n  toggleFavorite(contato) {\n    const isFavorite = contato.contatoSnFavorito === 'S';\n    this.contatoService.updateFavorito(contato.contatoId, !isFavorite).subscribe(updatedContato => {\n      contato.contatoSnFavorito = updatedContato.contatoSnFavorito;\n      // Reordenamento após atualizar o estado\n      this.reorderContatos();\n    }, error => {\n      console.error('Erro ao atualizar o status de favorito!.', error);\n    });\n  }\n  reorderContatos() {\n    let favorited = this.contatos.filter(c => c.contatoSnFavorito === 'S').sort((a, b) => this.originalContatos.indexOf(a) - this.originalContatos.indexOf(b));\n    let notFavorited = this.originalContatos.filter(c => c.contatoSnFavorito === 'N');\n    this.contatos = [...favorited, ...notFavorited];\n  }\n  toggleActive(contato) {\n    const isActive = contato.contatoSnAtivo === 'S';\n    this.contatoService.toggleActiveContato(contato.contatoId, !isActive).subscribe({\n      next: updatedContato => {\n        contato.contatoSnAtivo = updatedContato.contatoSnAtivo;\n      },\n      error: error => console.error('Erro ao alternar o status ativo!', error)\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: ContatoService\n  }, {\n    type: Router\n  }];\n};\nContatoListComponent = __decorate([Component({\n  selector: 'app-contato-list',\n  standalone: true,\n  imports: [CommonModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ContatoListComponent);\nexport { ContatoListComponent };","map":{"version":3,"names":["CommonModule","Component","Router","ContatoService","ContatoListComponent","constructor","contatoService","router","contatos","originalContatos","ngOnInit","loadContatos","getContatos","subscribe","data","error","console","deleteContato","contatoId","confirm","filter","contato","editContato","navigate","inactivateContato","next","contatoSnAtivo","addContato","toggleFavorite","isFavorite","contatoSnFavorito","updateFavorito","updatedContato","reorderContatos","favorited","c","sort","a","b","indexOf","notFavorited","toggleActive","isActive","toggleActiveContato","_","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["/Users/imsidraque/Documents/Projects/Teste Entrevista K2/front-end/agenda-telefonica/src/app/pages/contato-list/contato-list.component.ts"],"sourcesContent":["// contato-list.component.ts\nimport { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Contato } from '../../models/contato.model';\nimport { ContatoService } from '../../services/contato.service';\n\n@Component({\n  selector: 'app-contato-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './contato-list.component.html',\n  styleUrls: ['./contato-list.component.scss']\n})\nexport class ContatoListComponent implements OnInit {\n  contatos: Contato[] = [];\n  originalContatos: Contato[] = [];\n\n  constructor(\n    private contatoService: ContatoService,\n    private router: Router\n  ) { }\n  ngOnInit(): void {\n    this.loadContatos();\n  }\n\n  loadContatos(): void {\n    this.contatoService.getContatos().subscribe(\n      data => {\n        this.contatos = data;\n        this.originalContatos = [...this.contatos];\n      },\n      error => {\n        console.error('Erro ao buscar contatos!', error);\n      }\n    );\n  }\n\n  deleteContato(contatoId: number): void {\n    if (confirm('Tem certeza de que deseja excluir este contato?')) {\n      this.contatoService.deleteContato(contatoId).subscribe(\n        () => {\n          this.contatos = this.contatos.filter(contato => contato.contatoId !== contatoId);\n        },\n        error => {\n          console.error('Erro ao excluir contato!', error);\n        }\n      );\n    }\n  }\n\n  editContato(contato: Contato): void {\n    this.router.navigate(['/contato/editar', contato.contatoId]);\n  }\n\n  inactivateContato(contato: Contato): void {\n    if (confirm('Tem certeza de que deseja desativar este contato?')) {\n      this.contatoService.inactivateContato(contato.contatoId).subscribe({\n        next: () => {\n          contato.contatoSnAtivo = 'N';\n        },\n        error: error => console.error('Houve um problema.', error)\n      });\n    }\n  }\n\n  addContato(): void {\n    this.router.navigate(['/contato/novo']);\n  }\n\n  toggleFavorite(contato: Contato): void {\n    const isFavorite = contato.contatoSnFavorito === 'S';\n    this.contatoService.updateFavorito(contato.contatoId, !isFavorite).subscribe(\n      updatedContato => {\n        contato.contatoSnFavorito = updatedContato.contatoSnFavorito;\n        // Reordenamento após atualizar o estado\n        this.reorderContatos();\n      },\n      error => {\n        console.error('Erro ao atualizar o status de favorito!.', error);\n      }\n    );\n  }\n  \n  \n  reorderContatos(): void {\n    let favorited = this.contatos.filter(c => c.contatoSnFavorito === 'S').sort((a, b) => this.originalContatos.indexOf(a) - this.originalContatos.indexOf(b));\n    let notFavorited = this.originalContatos.filter(c => c.contatoSnFavorito === 'N');\n  \n    this.contatos = [...favorited, ...notFavorited];\n  }\n  \n  \n  \n  toggleActive(contato: Contato): void {\n    const isActive = contato.contatoSnAtivo === 'S';\n    this.contatoService.toggleActiveContato(contato.contatoId, !isActive).subscribe({\n      next: updatedContato => {\n        contato.contatoSnAtivo = updatedContato.contatoSnAtivo;\n      },\n      error: error => console.error('Erro ao alternar o status ativo!', error)\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}