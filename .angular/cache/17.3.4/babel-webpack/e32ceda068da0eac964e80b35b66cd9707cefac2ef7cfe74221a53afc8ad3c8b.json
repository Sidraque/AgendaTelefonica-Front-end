{"ast":null,"code":"import { __decorate } from \"tslib\";\n// contato.service.ts\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nlet ContatoService = class ContatoService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/contatos';\n  }\n  getContatos() {\n    return this.http.get(this.apiUrl);\n  }\n  getContatoById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createContato(contato) {\n    return this.http.post(this.apiUrl, contato);\n  }\n  updateContato(id, contato) {\n    return this.http.put(`${this.apiUrl}/${id}`, contato);\n  }\n  deleteContato(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  updateFavorito(id, isFavorite) {\n    return this.http.patch(`${this.apiUrl}/${id}/favorito`, {\n      favorito: isFavorite\n    });\n  }\n  toggleActiveContato(contatoId, isActive) {\n    return this.http.patch(`${this.apiUrl}/${contatoId}/ativo`, {\n      ativo: isActive\n    });\n  }\n  inactivateContato(contatoId) {\n    return this.http.patch(`${this.apiUrl}/${contatoId}/ativo`, {\n      ativo: false\n    });\n  }\n  checkContactExists(celular) {\n    return this.http.get(`${this.apiUrl}/exists/${celular}`);\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nContatoService = __decorate([Injectable({\n  providedIn: 'root'\n})], ContatoService);\nexport { ContatoService };","map":{"version":3,"names":["HttpClient","Injectable","ContatoService","constructor","http","apiUrl","getContatos","get","getContatoById","id","createContato","contato","post","updateContato","put","deleteContato","delete","updateFavorito","isFavorite","patch","favorito","toggleActiveContato","contatoId","isActive","ativo","inactivateContato","checkContactExists","celular","_","__decorate","providedIn"],"sources":["/Users/imsidraque/Documents/Projects/Teste Entrevista K2/front-end/agenda-telefonica/src/app/services/contato.service.ts"],"sourcesContent":["// contato.service.ts\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Contato } from '../models/contato.model'; // Update the path to your model\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContatoService {\n  private apiUrl = 'http://localhost:8080/api/contatos';\n\n  constructor(private http: HttpClient) { }\n\n  getContatos(): Observable<Contato[]> {\n    return this.http.get<Contato[]>(this.apiUrl);\n  }\n\n  getContatoById(id: number): Observable<Contato> {\n    return this.http.get<Contato>(`${this.apiUrl}/${id}`);\n  }\n\n  createContato(contato: Contato): Observable<Contato> {\n    return this.http.post<Contato>(this.apiUrl, contato);\n  }\n\n  updateContato(id: number, contato: Contato): Observable<Contato> {\n    return this.http.put<Contato>(`${this.apiUrl}/${id}`, contato);\n  }\n\n  deleteContato(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  updateFavorito(id: number, isFavorite: boolean): Observable<Contato> {\n    return this.http.patch<Contato>(`${this.apiUrl}/${id}/favorito`, { favorito: isFavorite });\n  }\n\n  toggleActiveContato(contatoId: number, isActive: boolean): Observable<Contato> {\n    return this.http.patch<Contato>(`${this.apiUrl}/${contatoId}/ativo`, { ativo: isActive });\n  }\n\n  inactivateContato(contatoId: number): Observable<any> {\n    return this.http.patch(`${this.apiUrl}/${contatoId}/ativo`, { ativo: false });\n  }\n\n  checkContactExists(celular: string): Observable<Contato | null> {\n    return this.http.get<Contato | null>(`${this.apiUrl}/exists/${celular}`);\n  }\n}\n"],"mappings":";AAAA;AACA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,UAAU,QAAQ,eAAe;AAOnC,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEb;EAExCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEAG,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAC,aAAaA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,MAAM,EAAEM,OAAO,CAAC;EACtD;EAEAE,aAAaA,CAACJ,EAAU,EAAEE,OAAgB;IACxC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;EAChE;EAEAI,aAAaA,CAACN,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAQ,cAAcA,CAACR,EAAU,EAAES,UAAmB;IAC5C,OAAO,IAAI,CAACd,IAAI,CAACe,KAAK,CAAU,GAAG,IAAI,CAACd,MAAM,IAAII,EAAE,WAAW,EAAE;MAAEW,QAAQ,EAAEF;IAAU,CAAE,CAAC;EAC5F;EAEAG,mBAAmBA,CAACC,SAAiB,EAAEC,QAAiB;IACtD,OAAO,IAAI,CAACnB,IAAI,CAACe,KAAK,CAAU,GAAG,IAAI,CAACd,MAAM,IAAIiB,SAAS,QAAQ,EAAE;MAAEE,KAAK,EAAED;IAAQ,CAAE,CAAC;EAC3F;EAEAE,iBAAiBA,CAACH,SAAiB;IACjC,OAAO,IAAI,CAAClB,IAAI,CAACe,KAAK,CAAC,GAAG,IAAI,CAACd,MAAM,IAAIiB,SAAS,QAAQ,EAAE;MAAEE,KAAK,EAAE;IAAK,CAAE,CAAC;EAC/E;EAEAE,kBAAkBA,CAACC,OAAe;IAChC,OAAO,IAAI,CAACvB,IAAI,CAACG,GAAG,CAAiB,GAAG,IAAI,CAACF,MAAM,WAAWsB,OAAO,EAAE,CAAC;EAC1E;EAAC,QAAAC,CAAA,G;;;;AAvCU1B,cAAc,GAAA2B,UAAA,EAH1B5B,UAAU,CAAC;EACV6B,UAAU,EAAE;CACb,CAAC,C,EACW5B,cAAc,CAwC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}